.hamburger {
  position: relative; /* バーを中央基準で絶対配置するため */
  display: inline-flex;
  align-items: center;
  justify-content: center;
  /* gap は不要（バーは絶対配置） */
  flex-direction: column;
  border: none;
  background: transparent;
  cursor: pointer;
  width: var(--space-150);
  height: var(--space-150);
  overflow: visible; /* 変形時の見切れ防止 */
  --bar-gap: var(--space-050); /* 上下オフセット量（約8px） */
}

.bar {
  position: absolute;
  left: 50%;
  top: 50%;
  width: var(--space-150);
  height: var(--thickness-1);
  background: var(--color-neutral-900);
  border-radius: var(--radius-0125); /* 細線用の角丸 */
  transform: translate(-50%, -50%);
  transform-origin: center;
  transition:
    transform 200ms ease,
    opacity 150ms ease,
    background-color 200ms ease;
}

/* 閉状態（ハンバーガー）: 中央基準で上下にオフセット */
.hamburger:not([data-open='true']) .bar:nth-child(1) {
  transform: translate(-50%, calc(-50% - var(--bar-gap)));
}
.hamburger:not([data-open='true']) .bar:nth-child(2) {
  transform: translate(-50%, -50%);
}
.hamburger:not([data-open='true']) .bar:nth-child(3) {
  transform: translate(-50%, calc(-50% + var(--bar-gap)));
}

/* ハンバーガー開状態のアニメーション */
/* 開状態（X）: 中央で交差 */
.hamburger[data-open='true'] .bar:nth-child(1) {
  transform: translate(-50%, -50%) rotate(45deg);
}
.hamburger[data-open='true'] .bar:nth-child(2) {
  opacity: 0;
}
.hamburger[data-open='true'] .bar:nth-child(3) {
  transform: translate(-50%, -50%) rotate(-45deg);
}
